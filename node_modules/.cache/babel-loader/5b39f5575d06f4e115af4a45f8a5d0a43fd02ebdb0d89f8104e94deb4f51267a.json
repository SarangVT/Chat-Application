{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chat-Application\\\\src\\\\components\\\\context\\\\ChatPreviewContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from \"react\";\nimport formatedTime from \"./timeExtractor\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ChatPreviewContext = /*#__PURE__*/createContext();\nexport const ChatPreviewContextProvider = ({\n  children\n}) => {\n  _s();\n  const [recipient, setRecipient] = useState([\"Sarang Thakare\", \"Anurag Prasad\", \"Anshu Kumar\", \"Laddu Kumar\"]);\n  const [messages, setMessages] = useState(() => {\n    return recipient.reduce((allChats, individualChats) => {\n      allChats[individualChats] = [{\n        content: \"I am Iron Man...\",\n        time: \"11:30 PM\",\n        isRead: true\n      }];\n      return allChats;\n    }, {});\n  });\n  const addNewMessage = (msg, curRecipient) => {\n    const date = new Date();\n    setMessages(prevMessages => ({\n      ...prevMessages,\n      [curRecipient]: [...prevMessages[curRecipient], {\n        content: msg,\n        time: formatedTime(date),\n        read: false\n      }]\n    }));\n  };\n  const [curTypingMsg, setCurTypingMsg] = useState(\"\");\n  const [curRecipient, setCurRecipient] = useState(\"Sarang Thakare\");\n  return /*#__PURE__*/_jsxDEV(ChatPreviewContext.Provider, {\n    value: {\n      recipient,\n      setRecipient,\n      messages,\n      addNewMessage,\n      curRecipient,\n      setCurRecipient\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPreviewContextProvider, \"wk22Ksx2NA3NMREx7vQc6WlFWak=\");\n_c = ChatPreviewContextProvider;\nexport const useChats = () => {\n  _s2();\n  const {\n    recipient,\n    setRecipient,\n    messages,\n    addNewMessage,\n    curRecipient,\n    setCurRecipient\n  } = useContext(ChatPreviewContext);\n  return {\n    recipient,\n    setRecipient,\n    messages,\n    addNewMessage,\n    curRecipient,\n    setCurRecipient\n  };\n};\n_s2(useChats, \"mw222eYvLMNnQDoEhvzkuCiSu8c=\");\nvar _c;\n$RefreshReg$(_c, \"ChatPreviewContextProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","formatedTime","jsxDEV","_jsxDEV","ChatPreviewContext","ChatPreviewContextProvider","children","_s","recipient","setRecipient","messages","setMessages","reduce","allChats","individualChats","content","time","isRead","addNewMessage","msg","curRecipient","date","Date","prevMessages","read","curTypingMsg","setCurTypingMsg","setCurRecipient","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useChats","_s2","$RefreshReg$"],"sources":["E:/Chat-Application/src/components/context/ChatPreviewContext.jsx"],"sourcesContent":["import React, {createContext, useContext, useState} from \"react\";\r\nimport formatedTime from \"./timeExtractor\";\r\nexport const ChatPreviewContext = createContext();\r\n\r\n\r\nexport const ChatPreviewContextProvider = ({children})=> {\r\n    const [recipient, setRecipient] = useState([\"Sarang Thakare\", \"Anurag Prasad\", \"Anshu Kumar\", \"Laddu Kumar\"]);\r\n    const [messages, setMessages] = useState(()=> {\r\n        return recipient.reduce((allChats, individualChats)=>{\r\n            allChats[individualChats]=[{\r\n                content:\"I am Iron Man...\",\r\n                time:\"11:30 PM\",\r\n                isRead: true,\r\n            }];\r\n            return allChats;\r\n        },{})\r\n    });\r\n    const addNewMessage = (msg, curRecipient)=>{\r\n        const date = new Date();\r\n        setMessages((prevMessages)=>({\r\n            ...prevMessages, [curRecipient]:[...prevMessages[curRecipient], {content:msg, time:formatedTime(date), read: false}]\r\n        }));\r\n    }\r\n    const [curTypingMsg, setCurTypingMsg] = useState((\"\"));\r\n\r\n    const [curRecipient, setCurRecipient] = useState(\"Sarang Thakare\");\r\n    return (\r\n        <ChatPreviewContext.Provider value={{recipient, setRecipient, messages, addNewMessage, curRecipient, setCurRecipient}}>\r\n            {children}\r\n        </ChatPreviewContext.Provider>\r\n    );\r\n}\r\n\r\nexport const useChats = ()=> {\r\n    const {recipient, setRecipient, messages, addNewMessage, curRecipient, setCurRecipient}=useContext(ChatPreviewContext);\r\n    return {recipient, setRecipient, messages, addNewMessage, curRecipient, setCurRecipient};\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAGC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AAChE,OAAOC,YAAY,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC3C,OAAO,MAAMC,kBAAkB,gBAAGN,aAAa,CAAC,CAAC;AAGjD,OAAO,MAAMO,0BAA0B,GAAGA,CAAC;EAACC;AAAQ,CAAC,KAAI;EAAAC,EAAA;EACrD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,CAAC,gBAAgB,EAAE,eAAe,EAAE,aAAa,EAAE,aAAa,CAAC,CAAC;EAC7G,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,MAAK;IAC1C,OAAOQ,SAAS,CAACI,MAAM,CAAC,CAACC,QAAQ,EAAEC,eAAe,KAAG;MACjDD,QAAQ,CAACC,eAAe,CAAC,GAAC,CAAC;QACvBC,OAAO,EAAC,kBAAkB;QAC1BC,IAAI,EAAC,UAAU;QACfC,MAAM,EAAE;MACZ,CAAC,CAAC;MACF,OAAOJ,QAAQ;IACnB,CAAC,EAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC;EACF,MAAMK,aAAa,GAAGA,CAACC,GAAG,EAAEC,YAAY,KAAG;IACvC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC;IACvBX,WAAW,CAAEY,YAAY,KAAI;MACzB,GAAGA,YAAY;MAAE,CAACH,YAAY,GAAE,CAAC,GAAGG,YAAY,CAACH,YAAY,CAAC,EAAE;QAACL,OAAO,EAACI,GAAG;QAAEH,IAAI,EAACf,YAAY,CAACoB,IAAI,CAAC;QAAEG,IAAI,EAAE;MAAK,CAAC;IACvH,CAAC,CAAC,CAAC;EACP,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAE,EAAG,CAAC;EAEtD,MAAM,CAACoB,YAAY,EAAEO,eAAe,CAAC,GAAG3B,QAAQ,CAAC,gBAAgB,CAAC;EAClE,oBACIG,OAAA,CAACC,kBAAkB,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAACrB,SAAS;MAAEC,YAAY;MAAEC,QAAQ;MAAEQ,aAAa;MAAEE,YAAY;MAAEO;IAAe,CAAE;IAAArB,QAAA,EACjHA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACgB,CAAC;AAEtC,CAAC;AAAA1B,EAAA,CA1BYF,0BAA0B;AAAA6B,EAAA,GAA1B7B,0BAA0B;AA4BvC,OAAO,MAAM8B,QAAQ,GAAGA,CAAA,KAAK;EAAAC,GAAA;EACzB,MAAM;IAAC5B,SAAS;IAAEC,YAAY;IAAEC,QAAQ;IAAEQ,aAAa;IAAEE,YAAY;IAAEO;EAAe,CAAC,GAAC5B,UAAU,CAACK,kBAAkB,CAAC;EACtH,OAAO;IAACI,SAAS;IAAEC,YAAY;IAAEC,QAAQ;IAAEQ,aAAa;IAAEE,YAAY;IAAEO;EAAe,CAAC;AAC5F,CAAC;AAAAS,GAAA,CAHYD,QAAQ;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}